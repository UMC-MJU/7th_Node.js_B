// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id           BigInt    @id @default(autoincrement())
  name         String    @db.VarChar(20)
  gender       String    @db.VarChar(10)
  age          Int
  address      String    @db.VarChar(40)
  specAddress  String?   @map("spec_address") @db.VarChar(40)
  phoneNum     String    @map("phone_num") @db.VarChar(13)
  status       String    @db.VarChar(15)
  inactiveDate DateTime? @map("inactive_date") @db.DateTime(6)
  socialType   String?   @map("social_type") @db.VarChar(10)
  createdAt    DateTime? @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt    DateTime? @default(now()) @map("updated_at") @db.DateTime(6)
  email        String    @unique @db.VarChar(50)
  point        Int       @default(0)

  memberMissions MemberMission[]
  memberPrefers  MemberPrefer[]
  memberAgrees   MemberAgree[]
  reviews        Review[]

  @@map("member")
}

model Region {
  id        BigInt   @id @default(autoincrement())
  name      String   @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  stores Store[]

  @@map("region")
}

model Store {
  id        BigInt   @id @default(autoincrement())
  regionId  BigInt   @map("region_id")
  name      String   @db.VarChar(50)
  address   String   @db.VarChar(50)
  score     Float
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  region Region @relation(fields: [regionId], references: [id])

  missions    Mission[]
  reviews     Review[]
  ReviewImage ReviewImage[]

  @@map("store")
}

model Terms {
  id        BigInt   @id @default(autoincrement())
  title     String   @db.VarChar(20)
  body      String
  optional  Boolean
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  memberAgrees MemberAgree[]

  @@map("terms")
}

model FoodCategory {
  id           BigInt @id @default(autoincrement())
  name         String @db.VarChar(15)
  categoryType String @default("food") @db.VarChar(15)

  memberPrefers MemberPrefer[]

  @@map("food_category")
}

model MemberPrefer {
  id         BigInt   @id @default(autoincrement())
  memberId   BigInt   @map("member_id")
  categoryId BigInt   @map("category_id")
  createdAt  DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt  DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  member   Member       @relation(fields: [memberId], references: [id])
  category FoodCategory @relation(fields: [categoryId], references: [id])

  @@map("member_prefer")
}

model Mission {
  id          BigInt   @id @default(autoincrement())
  storeId     BigInt   @map("store_id")
  reward      Int
  deadline    DateTime //@db.DateTime()
  missionSpec String   @map("mission_spec")
  createdAt   DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt   DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  store Store @relation(fields: [storeId], references: [id])

  memberMissions MemberMission[]

  @@map("mission")
}

model MemberMission {
  id        BigInt   @id @default(autoincrement())
  memberId  BigInt   @map("member_id")
  missionId BigInt   @map("mission_id")
  status    String   @db.VarChar(15)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  member  Member  @relation(fields: [memberId], references: [id])
  mission Mission @relation(fields: [missionId], references: [id])

  @@map("member_mission")
}

model Review {
  id        BigInt   @id @default(autoincrement())
  memberId  BigInt   @map("member_id")
  storeId   BigInt   @map("store_id")
  body      String
  score     Float
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)

  member Member @relation(fields: [memberId], references: [id])
  store  Store  @relation(fields: [storeId], references: [id])

  reviewImages ReviewImage[]

  @@map("review")
}

model ReviewImage {
  id        BigInt   @id @default(autoincrement())
  reviewId  BigInt   @map("review_id")
  storeId   BigInt   @map("store_id")
  imageUrl  String   @map("image_url")
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  review Review @relation(fields: [reviewId], references: [id])
  store  Store  @relation(fields: [storeId], references: [id])

  @@map("review_image")
}

model MemberAgree {
  id        BigInt   @id @default(autoincrement())
  memberId  BigInt   @map("member_id")
  termsId   BigInt   @map("terms_id")
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(6)

  member Member @relation(fields: [memberId], references: [id])
  terms  Terms  @relation(fields: [termsId], references: [id])

  @@map("member_agree")
}
