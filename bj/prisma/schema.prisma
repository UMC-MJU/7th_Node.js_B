// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(20)
  gender        String   @db.VarChar(10)
  age           Int      
  address       String   @db.VarChar(40)
  specAddress   String   @map("spec_address") @db.VarChar(40)
  phoneNumber   String   @map("phone_number") @db.VarChar(13)
  status        String   @db.VarChar(15)
  inactiveDate  String   @map("inactive_date") @db.VarChar(6)
  createdAt     String   @map("create_at")
  updatedAt     String   @map("updated_at") 
  email         String   @unique(map: "email") @db.VarChar(50)
  point         Int   

  memberPrefers MemberPrefer[]

  @@map("member")
}

model FoodCategory{
  id            Int     @id @default(autoincrement())
  name          String  @db.VarChar(15)
  column4       String  @db.VarChar(15)

  memberPrefers MemberPrefer[]
  
  @@map("food_category")
}

model MemberPrefer{
  id              Int           @id @default(autoincrement())
  member          Member        @relation(fields: [memberId], references: [id])
  memberId        Int           @map("member_id")
  foodCategory    FoodCategory  @relation(fields: [foodCategoryId], references: [id])
  foodCategoryId  Int           @map("category_id")

  @@index([foodCategoryId], map: "category_id")
  @@index([memberId], map: "member_id")
  @@map("member_prefer")
}


